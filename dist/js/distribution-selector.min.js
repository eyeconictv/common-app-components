"use strict";angular.module("risevision.common.components.distribution-selector.services",["risevision.common.gapi"]),angular.module("risevision.common.components.distribution-selector",["risevision.common.components.distribution-selector.services","risevision.common.components.scrolling-list","risevision.common.loading","ui.bootstrap"]),angular.module("risevision.common.components.distribution-selector.services").constant("DISPLAY_SEARCH_FIELDS",["name","id"]).service("displayService",["$q","$log","coreAPILoader","userState","DISPLAY_SEARCH_FIELDS",function(i,t,s,e,l){var n=function(i,t){var s="";for(var l in i)s+="OR "+i[l]+':~"'+t+'" ';return s=s.substring(3),s=s+" AND companyId="+e.getSelectedCompanyId(),s.trim()},o={list:function(o,a){var r=i.defer(),d=o.query?n(l,o.query):"",c={companyId:e.getSelectedCompanyId(),search:d,cursor:a,count:o.count,sort:o.sortBy+(o.reverse?" desc":" asc")};return t.debug("list displays called with",c),s().then(function(i){return i.display.list(c)}).then(function(i){r.resolve(i.result)}).then(null,function(i){console.error("Failed to get list of displays.",i),r.reject(i)}),r.promise}};return o}]),angular.module("risevision.common.components.distribution-selector").directive("distributionSelector",["$modal",function(i){return{restrict:"E",scope:{distribution:"=",distributeToAll:"=",hideCta:"="},templateUrl:"distribution-selector/distribution-selector.html",link:function(t){var s=function(){var i="No Displays Selected";return t.distribution&&t.distribution.length>0&&(i=1===t.distribution.length?"1 Display Selected":t.distribution.length+" Displays Selected"),i},e=function(){t.distributionSelectionMessage=s()};t.$watchGroup(["distribution","distributeToAll"],function(){"undefined"==typeof t.distributeToAll&&(t.distributeToAll=!0),t.distributeToAll||e()}),t.manage=function(){var s=i.open({templateUrl:"distribution-selector/distribution-modal.html",controller:"selectDistributionModal",size:"lg",resolve:{distribution:function(){return t.distribution}}});s.result.then(function(i){t.distribution=i})}}}}]),angular.module("risevision.common.components.distribution-selector").controller("distributionListController",["$scope","$rootScope","displayService","$loading","BaseList",function(i,t,s,e,l){var n=40;i.displays=new l(n),i.search={sortBy:"name",count:n,reverse:!1},i.filterConfig={placeholder:"Search Displays",id:"displaySearchInput"},i.$on("displayCreated",function(){i.displays.clear(),i.load()}),i.$watch("loadingDisplays",function(i){i?e.start("display-list-loader"):e.stop("display-list-loader")}),i.load=function(){(!i.displays.list.length||!i.displays.endOfList&&i.displays.cursor)&&(i.loadingDisplays=!0,s.list(i.search,i.displays.cursor).then(function(t){i.displays.add(t.items?t.items:[],t.cursor)}).then(null,function(){i.error="Failed to load displays. Please try again later."}).finally(function(){i.loadingDisplays=!1}))},i.load(),i.sortBy=function(t){i.displays.clear(),t!==i.search.sortBy?i.search.sortBy=t:i.search.reverse=!i.search.reverse,i.load()},i.doSearch=function(){i.displays.clear(),i.load()},i.toggleDisplay=function(t){var s=i.parameters.distribution.indexOf(t);s>-1?i.parameters.distribution.splice(s,1):i.parameters.distribution.push(t)},i.addDisplay=function(){t.$broadcast("distributionSelector.addDisplay")},i.isSelected=function(t){var s=i.parameters.distribution.indexOf(t);return s>-1?!0:!1}}]),angular.module("risevision.common.components.distribution-selector").controller("selectDistributionModal",["$scope","$modalInstance","distribution",function(i,t,s){i.parameters={},i.parameters.distribution=s?angular.copy(s):[],i.apply=function(){console.debug("Selected Distribution: ",i.parameters.distribution),t.close(i.parameters.distribution)},i.dismiss=function(){t.dismiss()}}]),function(i){try{i=angular.module("risevision.common.components.distribution-selector")}catch(t){i=angular.module("risevision.common.components.distribution-selector",[])}i.run(["$templateCache",function(i){i.put("distribution-selector/distribution-list.html",'<div ng-controller="distributionListController"><search-filter filter-config="filterConfig" search="search" do-search="doSearch"></search-filter><div class="panel u_margin-sm-top"><div class="scrollable-list" scrolling-list="load()" rv-spinner="" rv-spinner-key="display-list-loader" rv-spinner-start-active="1"><div class="text-center u_margin-lg-top" ng-if="!loadingDisplays && displays.list.length === 0"><h4 class="text-muted u_margin-md-bottom u_margin-md-top">No Displays Available</h4><button ng-click="addDisplay()" class="btn btn-primary btn-lg">Add Display <i class="fa fa-plus icon-right"></i></button></div><table id="displayListTable" class="table table--hover table--selector table--multiple-selector animated fadeIn" ng-if="displays.list.length > 0"><thead class="table-header"><tr class="table-header__row"><th id="tableHeaderName" ng-click="sortBy(\'name\')" class="table-header__cell u_clickable">Name<i ng-if="search.sortBy == \'name\'" class="fa" ng-class="{false: \'fa-long-arrow-up\', true: \'fa-long-arrow-down\'}[search.reverse]"></i></th><th id="tableHeaderDisplayId" class="table-header__cell hidden-xs">Display ID</th><th id="tableHeaderAddress" class="table-header__cell hidden-xs">Address</th></tr></thead><tbody class="table-body"><tr class="table-body__row u_clickable display" ng-click="toggleDisplay(display.id);" ng-class="{\'active\' : isSelected(display.id) }" ng-repeat="display in displays.list"><td id="displayName-{{display.id}}" class="table-body__cell display-name"><span>{{display.name}}</span></td><td id="displayId-{{display.id}}" class="table-body__cell display-id hidden-xs"><span>{{display.id}}</span></td><td id="displayAddress-{{display.id}}" class="table-body__cell display-address hidden-xs"><span class="text-muted u_ellipsis-md">{{display.address}}</span></td></tr></tbody></table></div></div></div>')}])}(),function(i){try{i=angular.module("risevision.common.components.distribution-selector")}catch(t){i=angular.module("risevision.common.components.distribution-selector",[])}i.run(["$templateCache",function(i){i.put("distribution-selector/distribution-modal.html",'<div id="distributionModal"><div class="modal-header"><button type="button" class="close" ng-click="dismiss()" aria-hidden="true"><i class="fa fa-times"></i></button><h3 class="modal-title">Edit Distribution</h3></div><div class="modal-body" stop-event="touchend" ng-include="" src="\'distribution-selector/distribution-list.html\'"></div><div class="modal-footer"><button id="applyButton" class="btn-primary btn" ng-click="apply()">Apply <i class="fa fa-check icon-right"></i></button> <button id="distributionModalCancelButton" class="btn btn-default" ng-click="dismiss()">Cancel <i class="fa fa-times icon-right"></i></button></div></div>')}])}(),function(i){try{i=angular.module("risevision.common.components.distribution-selector")}catch(t){i=angular.module("risevision.common.components.distribution-selector",[])}i.run(["$templateCache",function(i){i.put("distribution-selector/distribution-selector.html",'<div class="form-group"><label class="control-label u_margin-right">Distribution</label> <label class="control-label control-label-secondary"><input type="checkbox" ng-model="distributeToAll" ng-checked="distributeToAll" class="ng-valid ng-dirty" checked="checked"> <span id="distributeToAllText">Select All Displays</span></label><div id="distributionField" ng-class="{\'input-group\': !hideCta}" class="panel-editable u_clickable" ng-click="manage()" ng-if="!distributeToAll"><div class="label label-tag"><span id="distributionFieldText" ng-bind="distributionSelectionMessage"></span></div><span ng-hide="hideCta" class="input-group-addon btn btn-primary">Select Display(s)</span></div></div>')}])}();